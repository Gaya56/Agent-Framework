name: "github"
version: "1.0.0"
description: "GitHub API operations - repos, issues, files, PRs"
icon: "üêô"
enabled: true
priority: 3  # after filesystem (1) and brave_search (2)

container:
  name: "agent-framework-mcp-github-1"
  image: "mcp/github:latest"  # official Docker image
  ports: []  # GitHub server communicates via stdio, no HTTP ports needed
  environment:
    - "GITHUB_PERSONAL_ACCESS_TOKEN=${GITHUB_PERSONAL_ACCESS_TOKEN}"

tools:
  - name: "get_authenticated_user"
    description: "Get the authenticated user's information"
    parameters: {}
    
  - name: "list_user_repositories"
    description: "List repositories for the authenticated user"
    parameters:
      visibility: "Repository visibility: all, public, private (optional, default all)"
      affiliation: "Relationship to repos: owner, collaborator, organization_member (optional, default owner,collaborator,organization_member)"
      type: "Repository type: all, owner, public, private, member (optional, default all)"
      sort: "Sort by created, updated, pushed, full_name (optional, default full_name)"
      direction: "Sort direction: asc or desc (optional, default asc)"
      per_page: "Results per page (optional, default 30, max 100)"
      
  - name: "create_or_update_file"
    description: "Create or update a single file in a repository"
    parameters:
      owner: "Repository owner (required)"
      repo: "Repository name (required)"
      path: "Path to file (required)"
      content: "File contents (required)"
      message: "Commit message (required)"
      branch: "Target branch (optional, defaults to default branch)"
      sha: "SHA of existing file for updates (optional)"
      
  - name: "push_files"
    description: "Push multiple files to a repository in a single commit"
    parameters:
      owner: "Repository owner (required)"
      repo: "Repository name (required)"
      branch: "Target branch (required)"
      message: "Commit message (required)"
      files: "Array of file objects with path and content (required)"
      
  - name: "search_repositories"
    description: "Search GitHub repositories"
    parameters:
      query: "Search query (required)"
      sort: "Sort by stars, forks, updated, or best_match (optional)"
      order: "asc or desc (optional)"
      per_page: "Number of results per page (optional, max 100)"
      
  - name: "create_repository"
    description: "Create a new repository"
    parameters:
      name: "Repository name (required)"
      description: "Repository description (optional)"
      private: "Whether repository is private (optional, default false)"
      auto_init: "Initialize with README (optional, default false)"
      
  - name: "get_file_contents"
    description: "Get the contents of a file from a repository"
    parameters:
      owner: "Repository owner (required)"
      repo: "Repository name (required)"
      path: "File path (required)"
      ref: "Branch, tag, or commit SHA (optional, defaults to default branch)"
      
  - name: "create_issue"
    description: "Create a new issue in a repository"
    parameters:
      owner: "Repository owner (required)"
      repo: "Repository name (required)"
      title: "Issue title (required)"
      body: "Issue description (optional)"
      labels: "Array of label names (optional)"
      assignees: "Array of usernames to assign (optional)"
      
  - name: "create_pull_request"
    description: "Create a new pull request"
    parameters:
      owner: "Repository owner (required)"
      repo: "Repository name (required)"
      title: "Pull request title (required)"
      head: "Branch name containing changes (required)"
      base: "Base branch to merge into (required)"
      body: "Pull request description (optional)"
      draft: "Create as draft PR (optional, default false)"
      
  - name: "fork_repository"
    description: "Fork a repository"
    parameters:
      owner: "Repository owner to fork from (required)"
      repo: "Repository name to fork (required)"
      organization: "Organization to fork to (optional)"
      
  - name: "create_branch"
    description: "Create a new branch"
    parameters:
      owner: "Repository owner (required)"
      repo: "Repository name (required)"
      branch: "New branch name (required)"
      from_branch: "Source branch (optional, defaults to default branch)"
      
  - name: "list_issues"
    description: "List issues in a repository"
    parameters:
      owner: "Repository owner (required)"
      repo: "Repository name (required)"
      state: "open, closed, or all (optional, default open)"
      labels: "Comma-separated list of label names (optional)"
      assignee: "Username of assignee (optional)"
      per_page: "Number of results per page (optional, max 100)"
      
  - name: "update_issue"
    description: "Update an existing issue"
    parameters:
      owner: "Repository owner (required)"
      repo: "Repository name (required)"
      issue_number: "Issue number (required)"
      title: "New issue title (optional)"
      body: "New issue body (optional)"
      state: "open or closed (optional)"
      labels: "Array of label names (optional)"
      
  - name: "add_issue_comment"
    description: "Add a comment to an issue"
    parameters:
      owner: "Repository owner (required)"
      repo: "Repository name (required)"
      issue_number: "Issue number (required)"
      body: "Comment body (required)"
      
  - name: "search_code"
    description: "Search code in repositories"
    parameters:
      query: "Search query (required)"
      sort: "indexed (optional)"
      order: "asc or desc (optional)"
      per_page: "Number of results per page (optional, max 100)"
      
  - name: "search_issues"
    description: "Search issues and pull requests"
    parameters:
      query: "Search query (required)"
      sort: "created, updated, comments (optional)"
      order: "asc or desc (optional)"
      per_page: "Number of results per page (optional, max 100)"

dependencies: []
health_check:
  endpoint: ""  # GitHub server doesn't expose HTTP health endpoint
  interval: 30
  timeout: 10
  retries: 3
